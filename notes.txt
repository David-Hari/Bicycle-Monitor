
Linux setup:

# For ANT USB device, create file /etc/udev/rules.d/garmin-ant2.rules containing the following:
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fcf", ATTRS{idProduct}=="1008", RUN+="/sbin/modprobe usbserial vendor=0x0fcf product=0x1008", MODE="0666", OWNER="pi", GROUP="root"

# To run camera & display from command line, use:
> /usr/bin/raspivid -t 0 -f --mode 5 -ex sports -fps 49 -w 1296 -h 730 --flush

# Allow Pi to be shutdown cleanly by connecting GPIO pin BCM 3 to ground.
# Not needed if detecting button press from Python code.
Add in /boot/config.txt:
  dtoverlay=gpio-shutdown,debounce=1000

# To allow login over serial connection:
# Disable Bluetooth to allow UART0 to be on the GPIO pins
Add in /boot/config.txt:
  dtoverlay=disable-bt
Then disable bluetooth with:
> sudo systemctl disable hciuart


Physical setup:

* Connect button to ground (pin 6) and GPIO 3 (pin 5) for shutdown.
  Connect LED of button to GPIO 14 UART Transmit (pin 8) to have it light up when the Pi is on.




Useful commands:

### Check temperature of CPU ###
> vcgencmd measure_temp
or
> cat /sys/class/thermal/thermal_zone0/temp

### Check if GPS daemon is running ###
> sudo systemctl status gpsd.socket

### Test/debug GPS daemon ###
> sudo systemctl stop gpsd.socket
> sudo gpsd /dev/ttyUSB1 -F /var/run/gpsd.sock
> cgps
> sudo killall gpsd

### Test video display ###
(currently set as hdmi_group=1, hdmi_mode=16 in /boot/config.txt)
list supported modes:
> tvservice –m CEA
> tvservice –m DMT
show current state:
> tvservice -s

### Bluetooth ###
> sudo modprobe btusb
> service bluetooth status
> service hciuart status

### GPIO and other info (from gpiozero library) ###
> pinout
